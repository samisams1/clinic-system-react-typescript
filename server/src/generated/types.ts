/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */





declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    model: NexusPrisma<TypeName, 'model'>
    crud: any
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  Admin: { // root type
    email?: string | null; // String
    firstName?: string | null; // String
    id?: string | null; // ID
    lastName?: string | null; // String
    password?: string | null; // String
    phoneNumber?: string | null; // String
    roleId?: string | null; // String
  }
  Appointment: { // root type
    checkUpDate?: string | null; // String
    diagosis?: string | null; // String
    doctor?: string | null; // String
    id?: number | null; // Int
    nextvist?: string | null; // String
    patient?: string | null; // String
    symptoms?: string | null; // String
  }
  AuthPayload: { // root type
    token?: string | null; // String
    user?: NexusGenRootTypes['User'] | null; // User
  }
  Cashier: { // root type
    email?: string | null; // String
    firstName?: string | null; // String
    id?: string | null; // ID
    lastName?: string | null; // String
    password?: string | null; // String
    phoneNumber?: string | null; // String
    roleId?: string | null; // String
  }
  Checkup: { // root type
    checkUpDate?: string | null; // String
    diagosis?: string | null; // String
    doctor?: number | null; // Int
    id?: number | null; // Int
    nextvist?: string | null; // String
    patient?: number | null; // Int
    symptoms?: string | null; // String
  }
  Doctor: { // root type
    email?: string | null; // String
    firstName?: string | null; // String
    id?: string | null; // ID
    lastName?: string | null; // String
    password?: string | null; // String
    phoneNumber?: string | null; // String
    roleId?: string | null; // String
  }
  Mutation: {};
  Nurse: { // root type
    email?: string | null; // String
    firstName?: string | null; // String
    id?: string | null; // ID
    lastName?: string | null; // String
    password?: string | null; // String
    phoneNumber?: string | null; // String
    roleId?: string | null; // String
  }
  Patient: { // root type
    address?: string | null; // String
    country?: string | null; // String
    dateOfBirth?: string | null; // String
    email?: string | null; // String
    firstName?: string | null; // String
    id?: number | null; // Int
    lastName?: string | null; // String
    martialStatus?: string | null; // String
    phoneNumber?: string | null; // String
  }
  PatientVitals: { // root type
    bpDiastolic?: string | null; // String
    bpSystolic?: string | null; // String
    id?: number | null; // Int
    notes?: string | null; // String
    patient?: string | null; // String
    temperature?: string | null; // String
  }
  Query: {};
  Role: { // root type
    id?: number | null; // Int
    name?: string | null; // String
  }
  User: { // root type
    email?: string | null; // String
    firstName?: string | null; // String
    id?: string | null; // ID
    lastName?: string | null; // String
    password?: string | null; // String
    phoneNumber?: string | null; // String
    role?: string | null; // String
    roleId?: string | null; // String
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Admin: { // field return type
    Role: Array<NexusGenRootTypes['Role'] | null> | null; // [Role]
    email: string | null; // String
    firstName: string | null; // String
    id: string | null; // ID
    lastName: string | null; // String
    password: string | null; // String
    phoneNumber: string | null; // String
    roleId: string | null; // String
  }
  Appointment: { // field return type
    Doctor: Array<NexusGenRootTypes['User'] | null> | null; // [User]
    Patient: Array<NexusGenRootTypes['Patient'] | null> | null; // [Patient]
    checkUpDate: string | null; // String
    diagosis: string | null; // String
    doctor: string | null; // String
    id: number | null; // Int
    nextvist: string | null; // String
    patient: string | null; // String
    symptoms: string | null; // String
  }
  AuthPayload: { // field return type
    token: string | null; // String
    user: NexusGenRootTypes['User'] | null; // User
  }
  Cashier: { // field return type
    Role: Array<NexusGenRootTypes['Role'] | null> | null; // [Role]
    email: string | null; // String
    firstName: string | null; // String
    id: string | null; // ID
    lastName: string | null; // String
    password: string | null; // String
    phoneNumber: string | null; // String
    roleId: string | null; // String
  }
  Checkup: { // field return type
    Doctor: Array<NexusGenRootTypes['User'] | null> | null; // [User]
    Patient: Array<NexusGenRootTypes['Patient'] | null> | null; // [Patient]
    checkUpDate: string | null; // String
    diagosis: string | null; // String
    doctor: number | null; // Int
    id: number | null; // Int
    nextvist: string | null; // String
    patient: number | null; // Int
    symptoms: string | null; // String
  }
  Doctor: { // field return type
    Role: Array<NexusGenRootTypes['Role'] | null> | null; // [Role]
    email: string | null; // String
    firstName: string | null; // String
    id: string | null; // ID
    lastName: string | null; // String
    password: string | null; // String
    phoneNumber: string | null; // String
    roleId: string | null; // String
  }
  Mutation: { // field return type
    createAppointment: NexusGenRootTypes['Appointment'] | null; // Appointment
    createCheckup: NexusGenRootTypes['Checkup'] | null; // Checkup
    createPatient: NexusGenRootTypes['Patient'] | null; // Patient
    createPatientVitals: NexusGenRootTypes['PatientVitals'] | null; // PatientVitals
    createUser: NexusGenRootTypes['User'] | null; // User
    deletePatient: NexusGenRootTypes['Patient'] | null; // Patient
    login: NexusGenRootTypes['AuthPayload'] | null; // AuthPayload
    updatePost: NexusGenRootTypes['Patient'] | null; // Patient
  }
  Nurse: { // field return type
    Role: Array<NexusGenRootTypes['Role'] | null> | null; // [Role]
    email: string | null; // String
    firstName: string | null; // String
    id: string | null; // ID
    lastName: string | null; // String
    password: string | null; // String
    phoneNumber: string | null; // String
    roleId: string | null; // String
  }
  Patient: { // field return type
    address: string | null; // String
    country: string | null; // String
    dateOfBirth: string | null; // String
    email: string | null; // String
    firstName: string | null; // String
    id: number | null; // Int
    lastName: string | null; // String
    martialStatus: string | null; // String
    phoneNumber: string | null; // String
  }
  PatientVitals: { // field return type
    Patient: Array<NexusGenRootTypes['Patient'] | null> | null; // [Patient]
    bpDiastolic: string | null; // String
    bpSystolic: string | null; // String
    id: number | null; // Int
    notes: string | null; // String
    patient: string | null; // String
    temperature: string | null; // String
  }
  Query: { // field return type
    PatientVitals: Array<NexusGenRootTypes['PatientVitals'] | null> | null; // [PatientVitals]
    admins: Array<NexusGenRootTypes['Admin'] | null> | null; // [Admin]
    appointments: Array<NexusGenRootTypes['Appointment'] | null> | null; // [Appointment]
    cashiers: Array<NexusGenRootTypes['Cashier'] | null> | null; // [Cashier]
    checkups: Array<NexusGenRootTypes['Checkup'] | null> | null; // [Checkup]
    doctors: Array<NexusGenRootTypes['Doctor'] | null> | null; // [Doctor]
    me: NexusGenRootTypes['User'] | null; // User
    nurses: Array<NexusGenRootTypes['Nurse'] | null> | null; // [Nurse]
    patients: Array<NexusGenRootTypes['Patient'] | null> | null; // [Patient]
    user: Array<NexusGenRootTypes['User'] | null> | null; // [User]
    users: Array<NexusGenRootTypes['User'] | null> | null; // [User]
  }
  Role: { // field return type
    id: number | null; // Int
    name: string | null; // String
  }
  User: { // field return type
    email: string | null; // String
    firstName: string | null; // String
    id: string | null; // ID
    lastName: string | null; // String
    password: string | null; // String
    phoneNumber: string | null; // String
    role: string | null; // String
    roleId: string | null; // String
  }
}

export interface NexusGenFieldTypeNames {
  Admin: { // field return type name
    Role: 'Role'
    email: 'String'
    firstName: 'String'
    id: 'ID'
    lastName: 'String'
    password: 'String'
    phoneNumber: 'String'
    roleId: 'String'
  }
  Appointment: { // field return type name
    Doctor: 'User'
    Patient: 'Patient'
    checkUpDate: 'String'
    diagosis: 'String'
    doctor: 'String'
    id: 'Int'
    nextvist: 'String'
    patient: 'String'
    symptoms: 'String'
  }
  AuthPayload: { // field return type name
    token: 'String'
    user: 'User'
  }
  Cashier: { // field return type name
    Role: 'Role'
    email: 'String'
    firstName: 'String'
    id: 'ID'
    lastName: 'String'
    password: 'String'
    phoneNumber: 'String'
    roleId: 'String'
  }
  Checkup: { // field return type name
    Doctor: 'User'
    Patient: 'Patient'
    checkUpDate: 'String'
    diagosis: 'String'
    doctor: 'Int'
    id: 'Int'
    nextvist: 'String'
    patient: 'Int'
    symptoms: 'String'
  }
  Doctor: { // field return type name
    Role: 'Role'
    email: 'String'
    firstName: 'String'
    id: 'ID'
    lastName: 'String'
    password: 'String'
    phoneNumber: 'String'
    roleId: 'String'
  }
  Mutation: { // field return type name
    createAppointment: 'Appointment'
    createCheckup: 'Checkup'
    createPatient: 'Patient'
    createPatientVitals: 'PatientVitals'
    createUser: 'User'
    deletePatient: 'Patient'
    login: 'AuthPayload'
    updatePost: 'Patient'
  }
  Nurse: { // field return type name
    Role: 'Role'
    email: 'String'
    firstName: 'String'
    id: 'ID'
    lastName: 'String'
    password: 'String'
    phoneNumber: 'String'
    roleId: 'String'
  }
  Patient: { // field return type name
    address: 'String'
    country: 'String'
    dateOfBirth: 'String'
    email: 'String'
    firstName: 'String'
    id: 'Int'
    lastName: 'String'
    martialStatus: 'String'
    phoneNumber: 'String'
  }
  PatientVitals: { // field return type name
    Patient: 'Patient'
    bpDiastolic: 'String'
    bpSystolic: 'String'
    id: 'Int'
    notes: 'String'
    patient: 'String'
    temperature: 'String'
  }
  Query: { // field return type name
    PatientVitals: 'PatientVitals'
    admins: 'Admin'
    appointments: 'Appointment'
    cashiers: 'Cashier'
    checkups: 'Checkup'
    doctors: 'Doctor'
    me: 'User'
    nurses: 'Nurse'
    patients: 'Patient'
    user: 'User'
    users: 'User'
  }
  Role: { // field return type name
    id: 'Int'
    name: 'String'
  }
  User: { // field return type name
    email: 'String'
    firstName: 'String'
    id: 'ID'
    lastName: 'String'
    password: 'String'
    phoneNumber: 'String'
    role: 'String'
    roleId: 'String'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createAppointment: { // args
      checkUpDate?: string | null; // String
      diagosis?: string | null; // String
      doctor?: number | null; // Int
      nextvist?: string | null; // String
      patient?: number | null; // Int
      symptoms?: string | null; // String
    }
    createCheckup: { // args
      checkUpDate?: string | null; // String
      diagosis?: string | null; // String
      doctor?: number | null; // Int
      nextvist?: string | null; // String
      patient?: number | null; // Int
      symptoms?: string | null; // String
    }
    createPatient: { // args
      address?: string | null; // String
      country?: string | null; // String
      dateOfBirth?: string | null; // String
      email?: string | null; // String
      firstName?: string | null; // String
      lastName?: string | null; // String
      martialStatus?: string | null; // String
      phoneNumber?: string | null; // String
    }
    createPatientVitals: { // args
      bpDiastolic?: string | null; // String
      bpSystolic?: string | null; // String
      notes?: string | null; // String
      patient?: number | null; // Int
      temperature?: string | null; // String
    }
    createUser: { // args
      email?: string | null; // String
      firstName?: string | null; // String
      lastName?: string | null; // String
      password?: string | null; // String
      phoneNumber?: string | null; // String
      role?: number | null; // Int
    }
    deletePatient: { // args
      id?: number | null; // Int
    }
    login: { // args
      email?: string | null; // String
      password?: string | null; // String
    }
    updatePost: { // args
      address?: string | null; // String
      country?: string | null; // String
      dateOfBirth?: string | null; // String
      email?: string | null; // String
      firstName?: string | null; // String
      id?: number | null; // Int
      lastName?: string | null; // String
      martialStatus?: string | null; // String
      phoneNumber?: string | null; // String
    }
  }
  Query: {
    PatientVitals: { // args
      id?: string | null; // ID
    }
    appointments: { // args
      id?: string | null; // ID
    }
    checkups: { // args
      id?: string | null; // ID
    }
    patients: { // args
      id?: string | null; // ID
    }
    user: { // args
      id?: string | null; // ID
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}